// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pizzeria_InForno.Data;

#nullable disable

namespace Pizzeria_InForno.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240312141503_finalUpdate")]
    partial class finalUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pizzeria_InForno.Models.Articoli", b =>
                {
                    b.Property<int>("IdArticolo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdArticolo"));

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Immagine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ingredienti")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeArticolo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Prezzo")
                        .HasColumnType("float");

                    b.Property<int>("TempoConsegna")
                        .HasColumnType("int");

                    b.HasKey("IdArticolo");

                    b.ToTable("Articoli");
                });

            modelBuilder.Entity("Pizzeria_InForno.Models.DettagliOrdine", b =>
                {
                    b.Property<int>("IdDettaglioOrdine")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDettaglioOrdine"));

                    b.Property<int>("IdArticolo")
                        .HasColumnType("int");

                    b.Property<int>("IdOrdine")
                        .HasColumnType("int");

                    b.Property<int>("Quantita")
                        .HasColumnType("int");

                    b.HasKey("IdDettaglioOrdine");

                    b.HasIndex("IdArticolo");

                    b.HasIndex("IdOrdine");

                    b.ToTable("DettagliOrdine");
                });

            modelBuilder.Entity("Pizzeria_InForno.Models.Ordini", b =>
                {
                    b.Property<int>("IdOrdine")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrdine"));

                    b.Property<int>("IdUtente")
                        .HasColumnType("int");

                    b.Property<string>("IndirizzoSpedizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsConsegnato")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Totale")
                        .HasColumnType("float");

                    b.HasKey("IdOrdine");

                    b.HasIndex("IdUtente");

                    b.ToTable("Ordini");
                });

            modelBuilder.Entity("Pizzeria_InForno.Models.Utenti", b =>
                {
                    b.Property<int>("IdUtente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUtente"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ruolo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdUtente");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Utenti");
                });

            modelBuilder.Entity("Pizzeria_InForno.Models.DettagliOrdine", b =>
                {
                    b.HasOne("Pizzeria_InForno.Models.Articoli", "Articoli")
                        .WithMany("DettagliOrdine")
                        .HasForeignKey("IdArticolo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pizzeria_InForno.Models.Ordini", "Ordini")
                        .WithMany("DettagliOrdine")
                        .HasForeignKey("IdOrdine")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articoli");

                    b.Navigation("Ordini");
                });

            modelBuilder.Entity("Pizzeria_InForno.Models.Ordini", b =>
                {
                    b.HasOne("Pizzeria_InForno.Models.Utenti", "Utenti")
                        .WithMany("Ordini")
                        .HasForeignKey("IdUtente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utenti");
                });

            modelBuilder.Entity("Pizzeria_InForno.Models.Articoli", b =>
                {
                    b.Navigation("DettagliOrdine");
                });

            modelBuilder.Entity("Pizzeria_InForno.Models.Ordini", b =>
                {
                    b.Navigation("DettagliOrdine");
                });

            modelBuilder.Entity("Pizzeria_InForno.Models.Utenti", b =>
                {
                    b.Navigation("Ordini");
                });
#pragma warning restore 612, 618
        }
    }
}
